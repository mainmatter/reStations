name: Publish Docker Image Daily

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight (UTC)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Sync data
        run: ./scripts/sync-data

      - name: Set build date
        run: echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            mainmatter/restations:latest
            mainmatter/restations:${{ env.BUILD_DATE }}

      - name: Smoke-test to ensure correctness
        run: |
          docker run -d -p 3000:3000 mainmatter/restations:latest
          sleep 5
          # check the server runs at all
          curl --retry 5 --retry-all-errors localhost:3000/places
          # check Paris Gare de l’Est exists
          curl localhost:3000/places/8711300 | jq -e '.places.[0] | select (.name=="Paris Gare de l’Est")'
          # check Paris Gare de l’Est is found for correct location
          curl -X POST -H "Content-Type: application/json" -d '{"restrictions": {"numberOfResults": 3}, "placeInput": {"geoPosition": {"latitude": 48.877, "longitude": 2.358}}}' localhost:3000/places | jq -e '.places.[] | select (.name=="Paris Gare de l’Est")'

      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            mainmatter/restations:latest
            mainmatter/restations:${{ env.BUILD_DATE }}
